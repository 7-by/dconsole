<haxe>
	<typedef path="pgr.gconsole.Register" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCCommands.hx" module="pgr.gconsole.GCCommands"><a>
	<object><d/></object>
	<name><c path="String"/></name>
	<monitor><x path="Bool"/></monitor>
	<completion><f a="">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></completion>
	<alias><c path="String"/></alias>
</a></typedef>
	<class path="pgr.gconsole.GCCommands" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCCommands.hx">
		<_variables public="1" line="22" static="1"><x path="Map">
	<c path="String"/>
	<t path="pgr.gconsole.Register"/>
</x></_variables>
		<_functions public="1" line="23" static="1"><x path="Map">
	<c path="String"/>
	<t path="pgr.gconsole.Register"/>
</x></_functions>
		<_objects public="1" line="24" static="1"><x path="Map">
	<c path="String"/>
	<t path="pgr.gconsole.Register"/>
</x></_objects>
		<registerVariable public="1" set="method" line="31" static="1"><f a="object:name:alias:monitor">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></registerVariable>
		<registerFunction public="1" set="method" line="52" static="1"><f a="object:name:alias:monitor:?completionHandler">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<f a="">
		<c path="String"/>
		<c path="Array"><c path="String"/></c>
	</f>
	<x path="Void"/>
</f></registerFunction>
		<registerObject public="1" set="method" line="72" static="1"><f a="object:alias">
	<d/>
	<c path="String"/>
	<x path="Void"/>
</f></registerObject>
		<unregisterVariable public="1" set="method" line="97" static="1"><f a="alias">
	<c path="String"/>
	<x path="Bool"/>
</f></unregisterVariable>
		<unregisterFunction public="1" set="method" line="108" static="1"><f a="alias">
	<c path="String"/>
	<x path="Bool"/>
</f></unregisterFunction>
		<unregisterObject public="1" set="method" line="118" static="1"><f a="alias">
	<c path="String"/>
	<x path="Bool"/>
</f></unregisterObject>
		<clearRegistry public="1" set="method" line="140" static="1"><f a=""><x path="Void"/></f></clearRegistry>
		<showHelp public="1" set="method" line="150" static="1"><f a=""><x path="Void"/></f></showHelp>
		<showCommands public="1" set="method" line="161" static="1"><f a=""><x path="Void"/></f></showCommands>
		<setVar public="1" set="method" line="176" static="1"><f a="args">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></setVar>
		<callFunction public="1" set="method" line="214" static="1"><f a="args">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></callFunction>
		<listVars public="1" set="method" line="252" static="1"><f a=""><x path="Void"/></f></listVars>
		<listFunctions public="1" set="method" line="265" static="1"><f a=""><x path="Void"/></f></listFunctions>
		<listObjects public="1" set="method" line="277" static="1"><f a=""><x path="Void"/></f></listObjects>
		<getMonitorOutput public="1" set="method" line="289" static="1"><f a=""><c path="String"/></f></getMonitorOutput>
		<getFunctionNames public="1" set="method" line="303" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getFunctionNames>
		<getFunction public="1" set="method" line="311" static="1"><f a="alias">
	<c path="String"/>
	<t path="pgr.gconsole.Register"/>
</f></getFunction>
		<getObject public="1" set="method" line="318" static="1"><f a="alias">
	<c path="String"/>
	<unknown/>
</f></getObject>
		<new public="1" set="method" line="26"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* GCCommands contains the logic used by GameConsole to execute the commands
 * given by the user.
 *
 * @author TiagoLr ( ~~~ProG4mr~~~ )</haxe_doc>
	</class>
	<class path="pgr.gconsole.GCInterface" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCInterface.hx">
		<extends path="flash.display.Sprite"/>
		<toggleConsoleOn public="1" set="method" line="218"><f a="turnOn">
	<x path="Bool"/>
	<x path="Void"/>
</f></toggleConsoleOn>
		<toggleMonitor public="1" set="method" line="211"><f a="turnOn">
	<x path="Bool"/>
	<x path="Void"/>
</f></toggleMonitor>
		<resizeTextFields set="method" line="187"><f a=""><x path="Void"/></f></resizeTextFields>
		<drawUI public="1" set="method" line="153"><f a=""><x path="Void"/></f></drawUI>
		<setMonitorFont public="1" set="method" line="144"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setMonitorFont>
		<setPromptFont public="1" set="method" line="132"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setPromptFont>
		<setConsoleFont public="1" set="method" line="120"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setConsoleFont>
		<createMonitor set="method" line="91"><f a=""><x path="Void"/></f></createMonitor>
		<margin><x path="Int"/></margin>
		<inited><x path="Bool"/></inited>
		<txtMonitorRight public="1"><c path="flash.text.TextField"/></txtMonitorRight>
		<txtMonitorLeft public="1"><c path="flash.text.TextField"/></txtMonitorLeft>
		<txtPrompt public="1"><c path="flash.text.TextField"/></txtPrompt>
		<txtConsole public="1"><c path="flash.text.TextField"/></txtConsole>
		<theme public="1"><t path="pgr.gconsole.Theme"/></theme>
		<_carret><c path="flash.display.MovieClip"/></_carret>
		<_yOffset><x path="Int"/></_yOffset>
		<_width><x path="Int"/></_width>
		<_promptFontYOffset><x path="Int"/></_promptFontYOffset>
		<_border><c path="flash.display.Sprite"/></_border>
		<_monitorBg><c path="flash.display.Sprite"/></_monitorBg>
		<_promptBg><c path="flash.display.Sprite"/></_promptBg>
		<_height><x path="Int"/></_height>
		<_bg><c path="flash.display.Sprite"/></_bg>
		<new public="1" set="method" line="43"><f a="height:align:_Theme">
	<x path="Float"/>
	<c path="String"/>
	<t path="pgr.gconsole.Theme"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* 
 * @author TiagoLr ( ~~~ProG4mr~~~ )</haxe_doc>
	</class>
	<typedef path="pgr.gconsole.Theme" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCThemes.hx" module="pgr.gconsole.GCThemes"><a>
	<PRM_TXT_C><x path="Int"/></PRM_TXT_C>
	<PRM_C><x path="Int"/></PRM_C>
	<MON_TXT_C><x path="Int"/></MON_TXT_C>
	<MON_TXT_A><x path="Float"/></MON_TXT_A>
	<MON_C><x path="Int"/></MON_C>
	<MON_A><x path="Float"/></MON_A>
	<LOG_WAR><x path="Int"/></LOG_WAR>
	<LOG_INF><x path="Int"/></LOG_INF>
	<LOG_ERR><x path="Int"/></LOG_ERR>
	<LOG_CON><x path="Int"/></LOG_CON>
	<CON_TXT_C><x path="Int"/></CON_TXT_C>
	<CON_TXT_A><x path="Float"/></CON_TXT_A>
	<CON_C><x path="Int"/></CON_C>
	<CON_A><x path="Float"/></CON_A>
</a></typedef>
	<class path="pgr.gconsole.GCThemes" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCThemes.hx">
		<LIGHT public="1" line="34" static="1"><t path="pgr.gconsole.Theme"/></LIGHT>
		<DARK public="1" line="54" static="1"><t path="pgr.gconsole.Theme"/></DARK>
		<new public="1" set="method" line="74"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* @author TiagoLr ( ~~~ProG4mr~~~ )
  * 
  * Static class that provides the themes for the console.
  * Create your own themes here.</haxe_doc>
	</class>
	<class path="pgr.gconsole.GCUtil" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GCUtil.hx">
		<autoComplete public="1" set="method" line="7" static="1"><f a="input">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></autoComplete>
		<processInput set="method" line="22" static="1"><f a="input:command">
	<c path="String"/>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></processInput>
		<lookForObject public="1" set="method" line="75" static="1">
			<f a="args">
				<c path="Array"><c path="String"/></c>
				<d/>
			</f>
			<haxe_doc>* Using reflect on the input, looks for nested object until last input.
	 * 
	 * @param	args 	A list of words to search the object using reflect.
	 * @return			The object found or null.</haxe_doc>
		</lookForObject>
		<autoCFilterResults set="method" line="104" static="1"><f a="input:listOptions">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></autoCFilterResults>
		<listRegFunctions set="method" line="132" static="1"><f a=""><c path="Array"><c path="String"/></c></f></listRegFunctions>
		<listRegVariables set="method" line="149" static="1"><f a=""><c path="Array"><c path="String"/></c></f></listRegVariables>
		<autoCListFunctions set="method" line="171" static="1">
			<f a="object">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>* Lists all the methods of an object.
	 * 
	 * @param	object	
	 * @return</haxe_doc>
		</autoCListFunctions>
		<autoCListVariables set="method" line="214" static="1">
			<f a="object">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>* Lists all the fields of an object.
	 * If the input is null, lists all the registered functions and objects.
	 * 
	 * @param	object	
	 * @return</haxe_doc>
		</autoCListVariables>
		<joinResult public="1" set="method" line="245" static="1"><f a="promptTxt:aCResult">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></joinResult>
		<generateAlias public="1" set="method" line="275" static="1"><f a="type:object:?name:alias">
	<c path="String"/>
	<d/>
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></generateAlias>
	</class>
	<class path="pgr.gconsole.GConsole" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GConsole.hx">
		<extends path="flash.display.Sprite"/>
		<VERSION public="1" get="inline" set="null" line="23" static="1"><c path="String"/></VERSION>
		<GC_TRC_ERR get="inline" set="null" line="24" static="1"><c path="String"/></GC_TRC_ERR>
		<ALIGN_DOWN public="1" line="26" static="1">
			<c path="String"/>
			<haxe_doc>Aligns console to bottom</haxe_doc>
		</ALIGN_DOWN>
		<ALIGN_UP public="1" line="28" static="1">
			<c path="String"/>
			<haxe_doc>Aligns console to top</haxe_doc>
		</ALIGN_UP>
		<commandNames line="46" static="1"><c path="Array"><c path="String"/></c></commandNames>
		<instance public="1" static="1"><c path="pgr.gconsole.GConsole"/></instance>
		<historyMaxSz public="1" get="null" set="accessor"><x path="Int"/></historyMaxSz>
		<set_historyMaxSz set="method" line="473"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_historyMaxSz>
		<assembleString set="method" line="462"><f a="array">
	<c path="Array"><c path="String"/></c>
	<c path="String"/>
</f></assembleString>
		<cycleRecords set="method" line="450"><f a="list:current">
	<c path="Array"><c path="String"/></c>
	<c path="String"/>
	<c path="String"/>
</f></cycleRecords>
		<updateInput set="method" line="445"><f a="val">
	<c path="String"/>
	<x path="Void"/>
</f></updateInput>
		<completeArguments set="method" line="430"><f a="string">
	<c path="String"/>
	<x path="Void"/>
</f></completeArguments>
		<completeCommand set="method" line="418"><f a="functions:args">
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></completeCommand>
		<completeInputLine set="method" line="396"><f a=""><x path="Void"/></f></completeInputLine>
		<processMonitorOutput set="method" line="377"><f a="input">
	<c path="String"/>
	<x path="Void"/>
</f></processMonitorOutput>
		<updateMonitor set="method" line="369"><f a="e">
	<c path="flash.events.Event"/>
	<x path="Void"/>
</f></updateMonitor>
		<parseInput set="method" line="350"><f a="input">
	<c path="String"/>
	<x path="Void"/>
</f></parseInput>
		<processInputLine set="method" line="332"><f a=""><x path="Void"/></f></processInputLine>
		<nextHistory set="method" line="321"><f a=""><x path="Void"/></f></nextHistory>
		<prevHistory set="method" line="310"><f a=""><x path="Void"/></f></prevHistory>
		<onKeyUp set="method" line="235"><f a="e">
	<c path="flash.events.KeyboardEvent"/>
	<x path="Void"/>
</f></onKeyUp>
		<onKeyDown set="method" line="228"><f a="e">
	<c path="flash.events.KeyboardEvent"/>
	<x path="Void"/>
</f></onKeyDown>
		<clearRegistry public="1" set="method" line="222"><f a=""><x path="Void"/></f></clearRegistry>
		<clearConsole public="1" set="method" line="218"><f a=""><x path="Void"/></f></clearConsole>
		<registerObject public="1" set="method" line="208"><f a="object:alias">
	<d/>
	<c path="String"/>
	<x path="Void"/>
</f></registerObject>
		<unregisterFunction public="1" set="method" line="200"><f a="alias">
	<c path="String"/>
	<x path="Void"/>
</f></unregisterFunction>
		<registerFunction public="1" set="method" line="182"><f a="object:name:alias:?monitor:?completionHandler">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<f a="">
		<c path="String"/>
		<c path="Array"><c path="String"/></c>
	</f>
	<x path="Void"/>
</f></registerFunction>
		<unregisterVariable public="1" set="method" line="174"><f a="alias">
	<c path="String"/>
	<x path="Void"/>
</f></unregisterVariable>
		<registerVariable public="1" set="method" line="156"><f a="object:name:alias:?monitor">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></registerVariable>
		<log public="1" set="method" line="138"><f a="data:?color">
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></log>
		<setShortcutKeyCode public="1" set="method" line="131"><f a="key">
	<x path="Int"/>
	<x path="Void"/>
</f></setShortcutKeyCode>
		<disable public="1" set="method" line="123"><f a=""><x path="Void"/></f></disable>
		<enable public="1" set="method" line="117"><f a=""><x path="Void"/></f></enable>
		<hideMonitor public="1" set="method" line="111"><f a=""><x path="Void"/></f></hideMonitor>
		<showMonitor public="1" set="method" line="102"><f a=""><x path="Void"/></f></showMonitor>
		<hideConsole public="1" set="method" line="96"><f a=""><x path="Void"/></f></hideConsole>
		<showConsole public="1" set="method" line="88"><f a=""><x path="Void"/></f></showConsole>
		<setMonitorFont public="1" set="method" line="84"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setMonitorFont>
		<setPromptFont public="1" set="method" line="79"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setPromptFont>
		<setConsoleFont public="1" set="method" line="75"><f a="?font:?embed:?size:?bold:?italic:?underline">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setConsoleFont>
		<_completionMainPart><c path="String"/></_completionMainPart>
		<_isCompleting><x path="Bool"/></_isCompleting>
		<_isConsoleOn><x path="Bool"/></_isConsoleOn>
		<_isMonitorOn><x path="Bool"/></_isMonitorOn>
		<_consoleScKey>
			<x path="Int"/>
			<haxe_doc>Show console key.</haxe_doc>
		</_consoleScKey>
		<_monitorRate><x path="Int"/></_monitorRate>
		<_elapsedFrames><x path="Int"/></_elapsedFrames>
		<_interface public="1"><c path="pgr.gconsole.GCInterface"/></_interface>
		<_historyMaxSz><x path="Int"/></_historyMaxSz>
		<_historyIndex><x path="Int"/></_historyIndex>
		<_historyArray><c path="Array"><c path="String"/></c></_historyArray>
		<new public="1" set="method" line="50"><f a="?height:?align:?theme:?monitorRate">
	<x path="Float"/>
	<c path="String"/>
	<t path="pgr.gconsole.Theme"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<enum path="pgr.gconsole.ALIGN" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GameConsole.hx" module="pgr.gconsole.GameConsole">
		<UP/>
		<DOWN/>
		<haxe_doc>* @author TiagoLr ( ~~~ProG4mr~~~ )</haxe_doc>
	</enum>
	<class path="pgr.gconsole.GameConsole" params="" file="C:\HaxeToolkit\haxe\lib\gameconsole\git/src/pgr/gconsole/GameConsole.hx">
		<ALIGN_DOWN public="1" line="21" static="1">
			<c path="String"/>
			<haxe_doc>Aligns console to bottom</haxe_doc>
		</ALIGN_DOWN>
		<ALIGN_UP public="1" line="23" static="1">
			<c path="String"/>
			<haxe_doc>Aligns console to top</haxe_doc>
		</ALIGN_UP>
		<init public="1" set="method" line="32" static="1">
			<f a="?height:?align:?theme:?monitorRate">
				<x path="Float"/>
				<c path="String"/>
				<t path="pgr.gconsole.Theme"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Inits GameConsole.
	 * @param	height	The height of the console (percent of app window height).
	 * @param	align	Aligns console using "UP" or "DOWN".
	 * @param	theme	Select the console theme from GCThemes.
	 * @param	monitorRate The number of frames elapsed for each monitor refresh.</haxe_doc>
		</init>
		<setConsoleFont public="1" set="method" line="48" static="1">
			<f a="?font:?embed:?size:?bold:?italic:?underline">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets the console font.
	 * To change font color see <code>GCThemes</code>.
	 * @param	font
	 * @param	embed
	 * @param	size
	 * @param	bold
	 * @param	italic
	 * @param	underline]]></haxe_doc>
		</setConsoleFont>
		<setPromptFont public="1" set="method" line="62" static="1">
			<f a="?font:?embed:?size:?bold:?italic:?underline">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets the prompt font.
	 * To change font color see <code>GCThemes</code>.
	 * @param	font
	 * @param	size
	 * @param	bold
	 * @param	italic
	 * @param	underline]]></haxe_doc>
		</setPromptFont>
		<setMonitorFont public="1" set="method" line="77" static="1">
			<f a="?font:?embed:?size:?bold:?italic:?underline">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets the monitor font.
	 * To change font color see <code>GCThemes</code>.
	 * @param	font
	 * @param	size
	 * @param	yOffset	Use this to align the font with the prompt graphic field.
	 * @param	bold
	 * @param	italic
	 * @param	underline]]></haxe_doc>
		</setMonitorFont>
		<setFont public="1" set="method" line="94" static="1">
			<f a="?font:?embed:?size:?bold:?italic:?underline">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets the monitor, console, and prompt fonts in one go.
	 * Sizes and offsets use the default values.
	 *
	 * To change the font color, see <code>GCThemes</code>
	 * @param font The path of the desired font file
	 * @param embed ?
	 * @param bold True if the font should be bold
	 * @param italic True if the font should be italicized
	 * @param underline True if the font should be underlined]]></haxe_doc>
		</setFont>
		<showConsole public="1" set="method" line="105" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Shows console.</haxe_doc>
		</showConsole>
		<hideConsole public="1" set="method" line="113" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Hides console.</haxe_doc>
		</hideConsole>
		<showMonitor public="1" set="method" line="122" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Shows monitor and starts to follow registered fiedls in real time.
	 * Only fields with 'monitor' flag set to true will be followed.</haxe_doc>
		</showMonitor>
		<hideMonitor public="1" set="method" line="130" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Stops monitoring.</haxe_doc>
		</hideMonitor>
		<enable public="1" set="method" line="138" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Enables console and its listeners.</haxe_doc>
		</enable>
		<disable public="1" set="method" line="146" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Disable console and its listeners.</haxe_doc>
		</disable>
		<setShortcutKeyCode public="1" set="method" line="155" static="1">
			<f a="key">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Sets the keycode to open the console.
	 * @param	key		The keycode for the new console shortcut key.</haxe_doc>
		</setShortcutKeyCode>
		<log public="1" set="method" line="165" static="1">
			<f a="data:?color">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Logs a message to the console.
	 * @param	data	The message to log. 
	 * @param	color	The color of text. (-1 uses default color)</haxe_doc>
		</log>
		<logWarning public="1" set="method" line="174" static="1">
			<f a="data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Logs a warning message to the console.
	 * @param	data	The message to log.</haxe_doc>
		</logWarning>
		<logError public="1" set="method" line="183" static="1">
			<f a="data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Logs a error message to the console.
	 * @param	data	The message to log.</haxe_doc>
		</logError>
		<logConfirmation public="1" set="method" line="192" static="1">
			<f a="data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Logs a confirmation message to the console.
	 * @param	data	The message to log.</haxe_doc>
		</logConfirmation>
		<logInfo public="1" set="method" line="201" static="1">
			<f a="data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Logs a info message to the console.
	 * @param	data	The message to log.</haxe_doc>
		</logInfo>
		<registerVariable public="1" set="method" line="213" static="1">
			<f a="object:field:?alias:?monitor">
				<d/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers a variable to used in the console.
	 * @param	object		Reference to object containing the variable.
	 * @param	field		The name of the variable inside the object.
	 * @param	alias		The display name that shows on screen console. (optional) - if no alias is given, an automatic alias will be created.
	 * @param	monitor 	Whether to monitor/display this variable in realtime using monitor.</haxe_doc>
		</registerVariable>
		<unregisterVariable public="1" set="method" line="222" static="1">
			<f a="alias">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Deletes field from registry.
	 * @param	alias</haxe_doc>
		</unregisterVariable>
		<registerObject public="1" set="method" line="232" static="1">
			<f a="object:?alias">
				<d/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers an object to be used in the console.
	 * @param	object		The object to register.
	 * @param	alias		The alias displayed in the console. (optional) - if no alias is given, an automatic alias will be created.</haxe_doc>
		</registerObject>
		<registerFunction public="1" set="method" line="246" static="1">
			<f a="object:Function:?alias:?monitor">
				<d/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers a function to be called from the console.
	 * If monitor argument is set, this function will be displayed on monitor window.
	 * 
	 * @param	object		A Reference to object containing the function.
	 * @param	Function	The name of the function inside the object.
	 * @param	alias		The display name that shows on screen console. (optional) - if no alias is given, an automatic alias will be created.
	 * @param	monitor 	If true, the function will be called every n frames and output printed. Be careful with this one.</haxe_doc>
		</registerFunction>
		<unregisterFunction public="1" set="method" line="255" static="1">
			<f a="alias">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Deletes field from registry.
	 * @param	alias</haxe_doc>
		</unregisterFunction>
		<clearConsole public="1" set="method" line="263" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Clears console logs.</haxe_doc>
		</clearConsole>
		<clearRegistry public="1" set="method" line="271" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Removes all entrys from registry.</haxe_doc>
		</clearRegistry>
		<toFront public="1" set="method" line="280" static="1">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Brings console to front in stage. 
	 * Useful when other ojects are added directly to stage, hiding the console.</haxe_doc>
		</toFront>
		<checkInstance set="method" line="285" static="1"><f a=""><x path="Void"/></f></checkInstance>
		<haxe_doc>* GameConsole class provides user friendly interface to Game Console.</haxe_doc>
	</class>
</haxe>